.. index:: pair: class; axl::ref::Buf
.. _doxid-classaxl_1_1ref_1_1_buf:
.. _cid-axl::ref::buf:

template class axl::ref::Buf
============================

.. toctree::
	:hidden:

	class_axl_ref_Buf_Hdr.rst

.. code-block:: cpp
	:class: overview-code-block

	#include <axl_ref_Buf.h>




.. _doxid-classaxl_1_1ref_1_1_buf_1ab65c636ad4d91f72873b1707be444f4d:
.. _cid-axl::ref::buf::buf:
.. _doxid-classaxl_1_1ref_1_1_buf_1ac6ba13ed98fcf2afd763026ab69b6473:
.. _cid-axl::ref::buf::buf-2:
.. _doxid-classaxl_1_1ref_1_1_buf_1a099be80884e0ad09edbeb3ccb2ab6d64:
.. _cid-axl::ref::buf::buf-3:
.. _doxid-classaxl_1_1ref_1_1_buf_1aeb1bdb2f7d226f7e5f574bef0f8cec59:
.. _cid-axl::ref::buf::buf-4:
.. _doxid-classaxl_1_1ref_1_1_buf_1ab971b185f04b9375edadcdaf1a4f7052:
.. _cid-axl::ref::buf::buf-5:
.. _doxid-classaxl_1_1ref_1_1_buf_1a1ef0470cb03b857371e54797d297ded0:
.. _cid-axl::ref::buf::operator const t *:
.. _doxid-classaxl_1_1ref_1_1_buf_1a4b348798e2df96a0cc489abd6ad4f069:
.. _cid-axl::ref::buf::operator t *:
.. _doxid-classaxl_1_1ref_1_1_buf_1ab04170b36380b16dfa268271f11bcd6e:
.. _cid-axl::ref::buf::operator:
.. _doxid-classaxl_1_1ref_1_1_buf_1a6ea1d111f320b9fe344eaa95c8fb007f:
.. _cid-axl::ref::buf::operator-2:
.. _doxid-classaxl_1_1ref_1_1_buf_1ad72fb80d65d25b5166c7c4383d29c8f3:
.. _cid-axl::ref::buf::operator-3:
.. _doxid-classaxl_1_1ref_1_1_buf_1ad74badf2f209f752f640e0017c3f2b9e:
.. _cid-axl::ref::buf::operator-4:
.. _doxid-classaxl_1_1ref_1_1_buf_1a4b0a9c0454622de071491a7a8e671414:
.. _cid-axl::ref::buf::operator-5:
.. _doxid-classaxl_1_1ref_1_1_buf_1a66a928b8bac931f6f8b9723b9190e90a:
.. _cid-axl::ref::buf::p:
.. _doxid-classaxl_1_1ref_1_1_buf_1a5a1533bdac8803205adfe2c27051b7a1:
.. _cid-axl::ref::buf::clear:
.. _doxid-classaxl_1_1ref_1_1_buf_1a5ef22c0fbcacce02939495e72f27f564:
.. _cid-axl::ref::buf::copy:
.. _doxid-classaxl_1_1ref_1_1_buf_1ad914f8728cdcd4ed31b5e60d9ccb0cb7:
.. _cid-axl::ref::buf::copy-2:
.. _doxid-classaxl_1_1ref_1_1_buf_1a949976cebfe1d4923f08b5803ef88a80:
.. _cid-axl::ref::buf::isexclusive:
.. _doxid-classaxl_1_1ref_1_1_buf_1a991556b83ce14a965fd24df0b18db878:
.. _cid-axl::ref::buf::ensureexclusive:
.. _doxid-classaxl_1_1ref_1_1_buf_1a7c1b880fef6f3210646e78792bd4ca71:
.. _cid-axl::ref::buf::getbuffer:
.. _doxid-classaxl_1_1ref_1_1_buf_1a7d85dec84ebd0c92d520273769e0dd48:
.. _cid-axl::ref::buf::createbuffer:
.. _doxid-classaxl_1_1ref_1_1_buf_1aae02b9f5d1b47dc92815dd4ca2d67223:
.. _cid-axl::ref::buf::setbuffer:
.. ref-code-block:: cpp
	:class: overview-code-block

	template <
	    typename T,
	    typename SizeOf = sl::SizeOf<T>,
	    typename Ref = BufRef<T, SizeOf>
	    >
	class Buf: public Ref

	    // direct descendants

	    class :ref:`axl::err::Error<doxid-classaxl_1_1err_1_1_error>` 
	    class :ref:`axl::sys::win::Sid<doxid-classaxl_1_1sys_1_1win_1_1_sid>` 

	// classes

	class :ref:`Hdr<doxid-classaxl_1_1ref_1_1_buf_1_1_hdr>` 

	// methods

	Buf ()
	Buf (const :ref:`Buf<doxid-classaxl_1_1ref_1_1_buf>`& src)
	Buf (const Ref& src)

	Buf (
	    const T* src,
	    size_t size = -1
	    )

	Buf (
	    :ref:`BufKind<doxid-namespaceaxl_1_1ref_1a62ea49a96b2632e17411a7f09238edbd>` kind,
	    void* p,
	    size_t size
	    )

	operator const T * () const
	operator T * ()

	const T*
	operator-> () const

	T*
	operator-> ()

	:ref:`Buf<doxid-classaxl_1_1ref_1_1_buf>`&
	operator= (const :ref:`Buf<doxid-classaxl_1_1ref_1_1_buf>`& src)

	:ref:`Buf<doxid-classaxl_1_1ref_1_1_buf>`&
	operator= (const Ref& src)

	:ref:`Buf<doxid-classaxl_1_1ref_1_1_buf>`&
	operator= (const T* p)

	T*
	p ()

	void
	clear ()

	size_t
	copy (const Ref& src)

	size_t
	copy (
	    const T* p,
	    size_t size = -1
	    )

	bool
	isExclusive ()

	bool
	ensureExclusive ()

	T*
	getBuffer (size_t* size = NULL)

	T*
	createBuffer (
	    size_t size = sizeof (T),
	    bool saveContents = false
	    )

	size_t
	setBuffer (
	    :ref:`ref::BufKind<doxid-namespaceaxl_1_1ref_1a62ea49a96b2632e17411a7f09238edbd>` kind,
	    void* p,
	    size_t size
	    )

